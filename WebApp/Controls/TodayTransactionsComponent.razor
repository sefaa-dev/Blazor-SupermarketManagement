@inject UseCases.IGetTodayTransactionsUseCase GetTodayTransactionsUseCase

@if (transactions != null)
{
    <table class="table">
    <thead>
        <tr>
            <th>Cashier Name</th>
            <th>Product Name</th>
            <th>Date Time</th>
            <th>Qty Before</th>
            <th>Qty Sold</th>
            <th>Qty After</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tran in transactions)
        {
        <tr>
            <td>@tran.CashierName</td>
            <td>@tran.ProductName</td>
            <td>@tran.TimeStamp.ToString("MM/dd")</td>
            <td>@tran.BeforeQty</td>
            <td>@tran.SoldQty</td>
            <td>@(tran.BeforeQty - tran.SoldQty)</td>

        </tr>
        }
    </tbody>
</table>
}


@code {

    private IEnumerable<Transaction> transactions;

    public void LoadTransactions(string cashierName)
    {

        transactions = GetTodayTransactionsUseCase.Execute(cashierName);

        StateHasChanged();
    }

}
